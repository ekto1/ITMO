1. Каким ключевым словом обозначаются встраиваемые функции?
Ваш ответ: inline

2. Каким будет значение переменной c после выполнения следующего кода?
int a, b = a = 0, c;
if (b != a++)
c = 1;
else if (b == --a)
c = 2;
Ваш ответ: 2

3. Пусть а = -5. Сколько раз выполнится тело цикла
while (a<0) a++;
Ваш ответ: 5

4. Какие ключевые слова входят в состав инструкции "если":
Ваш ответ: Else, if

5. Что из перечисленного является объявлением указателя в С++:
Ваш ответ: int* a;

6. Дана функция:
int sum(int a, int b)
{
return a + b;
}
Как правильно вызвать эту функцию?
Ваш ответ: sum(7, 8);

7. Выберите правильные утверждения о конструкторе класса:
Ваш ответ: Конструктор не возвращает значения, Конструктор имеет то же имя, что и класс.

8. Содержит ли этот код ошибки?
class A {
static void Foo();
};
void A::Foo() { }
Ваш ответ: да

9. Какие виды комментариев есть в C++?
Ваш ответ: // comment, /* comment */

10. Что означает конструкция
throw()
в объявлении функции? (например void f() throw();)
Ваш ответ: Такое объявление указывает, что функция не должна генерировать исключения.

11. В каком порядке инициализируются поля в классе?
Ваш ответ: В порядке их объявления

12. Что верно о следующем коде:
int main(int argc, char* argv[])
{
int a[3] = { 1, 2, 3 };
int b[2] = { 1, 2 };
a = b;
return 0;
}
Ваш ответ: Код не скомпилируется

13. Сколько раз выполнится цикл:
for (int i = 0; i <= 5; i += 3);
Ваш ответ: 2 раза

14. Как правильно объявить массив?
Ваш ответ: int array[5];

15. Что произойдет, если объявить следующие функции:
int Square (int width, int length = 3);
int Square (int size);
и вызвать функцию
int s = Square (10);
Ваш ответ: Код не скомпилируется

16. Какой будет вывод в консоль и почему?
#include <iostream>
#include <string>

void print(int v)
{
std::cout << "int:" << v << std::endl;
}

void print(bool v)
{
std::cout << "bool:" << v << std::endl;
}

void print(std::string v)
{
std::cout << "std::string:" << v << std::endl;
}

int main()
{
print(1);
print(true);
print("Hello world");
}
Ваш ответ: int:1, bool:1, std::string:Hello world.

17. Для каких целей применяется ключевое слово const?
Ваш ответ: Для объявления переменных, которые не могут быть изменены после их инициализации, или для методов класса, которые не могут менять состояние объекта.

18. Как защитить объект от копирования?
Ваш ответ: Чтобы защитить объект от копирования, можно сделать приватными (или удалить) конструктор копирования и оператор присваивания.